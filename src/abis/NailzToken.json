{
  "contractName": "NailzToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintedTimes",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "inflationMinting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inflationMinting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintedTimes\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/Zaid/Desktop/cabin DeFi/src/contracts/NailzToken.sol\":\"NailzToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Zaid/Desktop/cabin DeFi/src/contracts/NailzToken.sol\":{\"keccak256\":\"0x166f1815b7292f121cb7327036f29ed032839b4233928a679fbd7e5e7fce0fa8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ea433e309b87cfb2c457985cc8dccd629dc09bc534356cc595c91e6b33ff3fe\",\"dweb:/ipfs/QmVHDX6JzdhYvEx5gbWd87aMMxapZeHE3JxhmpbQFMUuWY\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x60806040526001600560156101000a81548160ff021916908360ff1602179055503480156200002d57600080fd5b506040518060400160405280600581526020017f4e61696c7a0000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4e4c5a00000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000b29291906200042e565b508060049080519060200190620000cb9291906200042e565b506012600560006101000a81548160ff021916908360ff16021790555050506000620000fc620001ba60201b60201c565b905080600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350620001b43366038d7ea4c68000620001c260201b60201c565b620004e4565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000266576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6200027a60008383620003a060201b60201c565b6200029681600254620003a560201b620012051790919060201c565b600281905550620002f4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620003a560201b620012051790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b60008082840190508381101562000424576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620004665760008555620004b2565b82601f106200048157805160ff1916838001178555620004b2565b82800160010185558215620004b2579182015b82811115620004b157825182559160200191906001019062000494565b5b509050620004c19190620004c5565b5090565b5b80821115620004e0576000816000905550600101620004c6565b5090565b611b5180620004f46000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610457578063a9059cbb146104bb578063dd62ed3e1461051f578063f2fde38b1461059757610100565b806370a082311461033e578063715018a6146103965780638da5cb5b146103a057806395d89b41146103d457610100565b8063313ce567116100d3578063313ce5671461028e57806339509351146102af5780633e0f2174146103135780635bb60b761461031d57610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ec57806323b872dd1461020a575b600080fd5b61010d6105db565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061067d565b60405180821515815260200191505060405180910390f35b6101f461069b565b6040518082815260200191505060405180910390f35b6102766004803603606081101561022057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106a5565b60405180821515815260200191505060405180910390f35b61029661077e565b604051808260ff16815260200191505060405180910390f35b6102fb600480360360408110156102c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610787565b60405180821515815260200191505060405180910390f35b61031b61083a565b005b610325610c07565b604051808260ff16815260200191505060405180910390f35b6103806004803603602081101561035457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c1a565b6040518082815260200191505060405180910390f35b61039e610c62565b005b6103a8610dd2565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103dc610dfc565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561041c578082015181840152602081019050610401565b50505050905090810190601f1680156104495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104a36004803603604081101561046d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e9e565b60405180821515815260200191505060405180910390f35b610507600480360360408110156104d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f6b565b60405180821515815260200191505060405180910390f35b6105816004803603604081101561053557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f89565b6040518082815260200191505060405180910390f35b6105d9600480360360208110156105ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611010565b005b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106735780601f1061064857610100808354040283529160200191610673565b820191906000526020600020905b81548152906001019060200180831161065657829003601f168201915b5050505050905090565b600061069161068a61128d565b8484611295565b6001905092915050565b6000600254905090565b60006106b284848461148c565b610773846106be61128d565b61076e85604051806060016040528060288152602001611a8660289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061072461128d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174d9092919063ffffffff16565b611295565b600190509392505050565b60006009905090565b600061083061079461128d565b8461082b85600160006107a561128d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461120590919063ffffffff16565b611295565b6001905092915050565b61084261128d565b73ffffffffffffffffffffffffffffffffffffffff16610860610dd2565b73ffffffffffffffffffffffffffffffffffffffff16146108e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6007600560159054906101000a900460ff1660ff161115610955576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611a656021913960400191505060405180910390fd5b6001600560159054906101000a900460ff1660ff1614156109b857610981336601c6bf52634000611807565b6005601581819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff16021790555050610c05565b6002600560159054906101000a900460ff1660ff161415610a1a576109e33365e35fa931a000611807565b6005601581819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff16021790555050610c04565b6003600560159054906101000a900460ff1660ff161415610a7c57610a45336571afd498d000611807565b6005601581819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff16021790555050610c03565b6004600560159054906101000a900460ff1660ff161415610ade57610aa7336538d7ea4c6800611807565b6005601581819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff16021790555050610c02565b60058060159054906101000a900460ff1660ff161415610b3f57610b0833651c6bf5263400611807565b6005601581819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff16021790555050610c01565b6006600560159054906101000a900460ff1660ff161415610ba157610b6a33650e350c27f200611807565b6005601581819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff16021790555050610c00565b6007600560159054906101000a900460ff1660ff161415610bff57610bcc33650e350c27f200611807565b6005601581819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff160217905550505b5b5b5b5b5b5b565b600560159054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610c6a61128d565b73ffffffffffffffffffffffffffffffffffffffff16610c88610dd2565b73ffffffffffffffffffffffffffffffffffffffff1614610d11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e945780601f10610e6957610100808354040283529160200191610e94565b820191906000526020600020905b815481529060010190602001808311610e7757829003601f168201915b5050505050905090565b6000610f61610eab61128d565b84610f5c85604051806060016040528060258152602001611af76025913960016000610ed561128d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174d9092919063ffffffff16565b611295565b6001905092915050565b6000610f7f610f7861128d565b848461148c565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61101861128d565b73ffffffffffffffffffffffffffffffffffffffff16611036610dd2565b73ffffffffffffffffffffffffffffffffffffffff16146110bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611145576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806119f76026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080828401905083811015611283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561131b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ad36024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611a1d6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611512576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611aae6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611598576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806119d46023913960400191505060405180910390fd5b6115a38383836119ce565b61160e81604051806060016040528060268152602001611a3f602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506116a1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461120590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906117fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156117bf5780820151818401526020810190506117a4565b50505050905090810190601f1680156117ec5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6118b6600083836119ce565b6118cb8160025461120590919063ffffffff16565b600281905550611922816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461120590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636520796f752063616e2774206d696e74206d6f7265204e61696c7a20746f6b656e7345524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b8c1b895317b6360d93cbbcf3d13ee7693bc33d9f879f9658ed0ca85798f88a464736f6c63430007040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610457578063a9059cbb146104bb578063dd62ed3e1461051f578063f2fde38b1461059757610100565b806370a082311461033e578063715018a6146103965780638da5cb5b146103a057806395d89b41146103d457610100565b8063313ce567116100d3578063313ce5671461028e57806339509351146102af5780633e0f2174146103135780635bb60b761461031d57610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ec57806323b872dd1461020a575b600080fd5b61010d6105db565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061067d565b60405180821515815260200191505060405180910390f35b6101f461069b565b6040518082815260200191505060405180910390f35b6102766004803603606081101561022057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106a5565b60405180821515815260200191505060405180910390f35b61029661077e565b604051808260ff16815260200191505060405180910390f35b6102fb600480360360408110156102c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610787565b60405180821515815260200191505060405180910390f35b61031b61083a565b005b610325610c07565b604051808260ff16815260200191505060405180910390f35b6103806004803603602081101561035457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c1a565b6040518082815260200191505060405180910390f35b61039e610c62565b005b6103a8610dd2565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103dc610dfc565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561041c578082015181840152602081019050610401565b50505050905090810190601f1680156104495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104a36004803603604081101561046d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e9e565b60405180821515815260200191505060405180910390f35b610507600480360360408110156104d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f6b565b60405180821515815260200191505060405180910390f35b6105816004803603604081101561053557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f89565b6040518082815260200191505060405180910390f35b6105d9600480360360208110156105ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611010565b005b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106735780601f1061064857610100808354040283529160200191610673565b820191906000526020600020905b81548152906001019060200180831161065657829003601f168201915b5050505050905090565b600061069161068a61128d565b8484611295565b6001905092915050565b6000600254905090565b60006106b284848461148c565b610773846106be61128d565b61076e85604051806060016040528060288152602001611a8660289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061072461128d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174d9092919063ffffffff16565b611295565b600190509392505050565b60006009905090565b600061083061079461128d565b8461082b85600160006107a561128d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461120590919063ffffffff16565b611295565b6001905092915050565b61084261128d565b73ffffffffffffffffffffffffffffffffffffffff16610860610dd2565b73ffffffffffffffffffffffffffffffffffffffff16146108e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6007600560159054906101000a900460ff1660ff161115610955576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611a656021913960400191505060405180910390fd5b6001600560159054906101000a900460ff1660ff1614156109b857610981336601c6bf52634000611807565b6005601581819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff16021790555050610c05565b6002600560159054906101000a900460ff1660ff161415610a1a576109e33365e35fa931a000611807565b6005601581819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff16021790555050610c04565b6003600560159054906101000a900460ff1660ff161415610a7c57610a45336571afd498d000611807565b6005601581819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff16021790555050610c03565b6004600560159054906101000a900460ff1660ff161415610ade57610aa7336538d7ea4c6800611807565b6005601581819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff16021790555050610c02565b60058060159054906101000a900460ff1660ff161415610b3f57610b0833651c6bf5263400611807565b6005601581819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff16021790555050610c01565b6006600560159054906101000a900460ff1660ff161415610ba157610b6a33650e350c27f200611807565b6005601581819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff16021790555050610c00565b6007600560159054906101000a900460ff1660ff161415610bff57610bcc33650e350c27f200611807565b6005601581819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff160217905550505b5b5b5b5b5b5b565b600560159054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610c6a61128d565b73ffffffffffffffffffffffffffffffffffffffff16610c88610dd2565b73ffffffffffffffffffffffffffffffffffffffff1614610d11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e945780601f10610e6957610100808354040283529160200191610e94565b820191906000526020600020905b815481529060010190602001808311610e7757829003601f168201915b5050505050905090565b6000610f61610eab61128d565b84610f5c85604051806060016040528060258152602001611af76025913960016000610ed561128d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174d9092919063ffffffff16565b611295565b6001905092915050565b6000610f7f610f7861128d565b848461148c565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61101861128d565b73ffffffffffffffffffffffffffffffffffffffff16611036610dd2565b73ffffffffffffffffffffffffffffffffffffffff16146110bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611145576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806119f76026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080828401905083811015611283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561131b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ad36024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611a1d6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611512576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611aae6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611598576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806119d46023913960400191505060405180910390fd5b6115a38383836119ce565b61160e81604051806060016040528060268152602001611a3f602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461174d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506116a1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461120590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906117fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156117bf5780820151818401526020810190506117a4565b50505050905090810190601f1680156117ec5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6118b6600083836119ce565b6118cb8160025461120590919063ffffffff16565b600281905550611922816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461120590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636520796f752063616e2774206d696e74206d6f7265204e61696c7a20746f6b656e7345524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b8c1b895317b6360d93cbbcf3d13ee7693bc33d9f879f9658ed0ca85798f88a464736f6c63430007040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "180:1525:0:-:0;;;336:1;309:28;;;;;;;;;;;;;;;;;;;;428:90;;;;;;;;;;1958:145:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:5;2032;:13;;;;;;;;;;;;:::i;:::-;;2065:7;2055;:17;;;;;;;;;;;;:::i;:::-;;2094:2;2082:9;;:14;;;;;;;;;;;;;;;;;;1958:145;;884:17:3;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;478:34:0::1;484:10;496:15;478:5;;;:34;;:::i;:::-;180:1525:::0;;598:104:7;651:15;685:10;678:17;;598:104;:::o;7832:370:5:-;7934:1;7915:21;;:7;:21;;;;7907:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:49;8012:1;8016:7;8025:6;7983:20;;;:49;;:::i;:::-;8058:24;8075:6;8058:12;;:16;;;;;;:24;;;;:::i;:::-;8043:12;:39;;;;8113:30;8136:6;8113:9;:18;8123:7;8113:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;8092:9;:18;8102:7;8092:18;;;;;;;;;;;;;;;:51;;;;8179:7;8158:37;;8175:1;8158:37;;;8188:6;8158:37;;;;;;;;;;;;;;;;;;7832:370;;:::o;10701:92::-;;;;:::o;2690:175:4:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;180:1525:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "180:1525:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4877:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;620:86:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5589:215:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;921:783:0;;;:::i;:::-;;309:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3399:125:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1717:145:3;;;:::i;:::-;;1085:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2370:93:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6291:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3727:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3957:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2011:240:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2168:89:5;2213:13;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;4399:4;4392:11;;4244:166;;;;:::o;3235:106::-;3296:7;3322:12;;3315:19;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;:11;:19;5088:6;5076:19;;;;;;;;;;;;;;;:33;5096:12;:10;:12::i;:::-;5076:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5045:8;:121::i;:::-;5183:4;5176:11;;4877:317;;;;;:::o;620:86:0:-;678:5;699:1;692:8;;620:86;:::o;5589:215:5:-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;5725:25;;;;;;;;;;;;;;;:34;5751:7;5725:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5693:8;:83::i;:::-;5793:4;5786:11;;5589:215;;;;:::o;921:783:0:-;1308:12:3;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;999:1:0::1;984:11;;;;;;;;;;;:16;;;;976:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1061:1;1048:11;;;;;;;;;;;:14;;;1045:656;;;1071:33;1077:10;1089:14;1071:5;:33::i;:::-;1111:11;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1045:656;;;1155:1;1141:11;;;;;;;;;;;:15;;;1138:563;;;1165:33;1171:10;1183:14;1165:5;:33::i;:::-;1206:11;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1138:563;;;1250:1;1236:11;;;;;;;;;;;:15;;;1233:468;;;1260:33;1266:10;1278:14;1260:5;:33::i;:::-;1301:11;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1233:468;;;1344:1;1331:11;;;;;;;;;;;:14;;;1328:373;;;1355:32;1361:10;1373:13;1355:5;:32::i;:::-;1395:11;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1328:373;;;1439:1;1425:11:::0;::::1;;;;;;;;;;:15;;;1422:279;;;1450:32;1456:10;1468:13;1450:5;:32::i;:::-;1490:11;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1422:279;;;1534:1;1520:11;;;;;;;;;;;:15;;;1517:184;;;1545:32;1551:10;1563:13;1545:5;:32::i;:::-;1585:11;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1517:184;;;1629:1;1614:11;;;;;;;;;;;:16;;;1611:90;;;1640:32;1646:10;1658:13;1640:5;:32::i;:::-;1680:11;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1611:90;1517:184;1422:279;1328:373;1233:468;1138:563;1045:656;921:783::o:0;309:28::-;;;;;;;;;;;;;:::o;3399:125:5:-;3473:7;3499:9;:18;3509:7;3499:18;;;;;;;;;;;;;;;;3492:25;;3399:125;;;:::o;1717:145:3:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;;;;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6;;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;1085:85::-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;2370:93:5:-;2417:13;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:93;:::o;6291:266::-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;6432:25;;;;;;;;;;;;;;;:34;6458:7;6432:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6400:8;:129::i;:::-;6546:4;6539:11;;6291:266;;;;:::o;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;:::-;3888:4;3881:11;;3727:172;;;;:::o;3957:149::-;4046:7;4072:11;:18;4084:5;4072:18;;;;;;;;;;;;;;;:27;4091:7;4072:27;;;;;;;;;;;;;;;;4065:34;;3957:149;;;;:::o;2011:240:3:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;;;;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;;:17;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;2690:175:4:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;598:104:7:-;651:15;685:10;678:17;;598:104;:::o;9355:340:5:-;9473:1;9456:19;;:5;:19;;;;9448:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9553:1;9534:21;;:7;:21;;;;9526:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9635:6;9605:11;:18;9617:5;9605:18;;;;;;;;;;;;;;;:27;9624:7;9605:27;;;;;;;;;;;;;;;:36;;;;9672:7;9656:32;;9665:5;9656:32;;;9681:6;9656:32;;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;7154:1;7136:20;;:6;:20;;;;7128:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7237:1;7216:23;;:9;:23;;;;7208:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;:9;:17;7378:6;7368:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7348:9;:17;7358:6;7348:17;;;;;;;;;;;;;;;:91;;;;7472:32;7497:6;7472:9;:20;7482:9;7472:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7449:9;:20;7459:9;7449:20;;;;;;;;;;;;;;;:55;;;;7536:9;7519:35;;7528:6;7519:35;;;7547:6;7519:35;;;;;;;;;;;;;;;;;;7031:530;;;:::o;5432:163:4:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;7832:370:5:-;7934:1;7915:21;;:7;:21;;;;7907:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:49;8012:1;8016:7;8025:6;7983:20;:49::i;:::-;8058:24;8075:6;8058:12;;:16;;:24;;;;:::i;:::-;8043:12;:39;;;;8113:30;8136:6;8113:9;:18;8123:7;8113:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8092:9;:18;8102:7;8092:18;;;;;;;;;;;;;;;:51;;;;8179:7;8158:37;;8175:1;8158:37;;;8188:6;8158:37;;;;;;;;;;;;;;;;;;7832:370;;:::o;10701:92::-;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract NailzToken is ERC20, Ownable {\r\n    \r\n  // this variable will start the count for the inflactionMinting function    \r\n  uint8 public mintedTimes = 1;\r\n\r\n  // this constructor will mint the initial total supply of 1,000,000 Nailz tokens\r\n  constructor() public ERC20(\"Nailz\", \"NLZ\") {\r\n    _mint(msg.sender, 1000000 * 10**9);\r\n  }\r\n  \r\n  \r\n  // this is an override function to change the ERC 20 token decimals to 9 instade of 18\r\n  function decimals() public view virtual override returns (uint8) {\r\n    return 9;\r\n  }\r\n\r\n  //only the owner of this contract (the deployer) can implement this function and no one else\r\n  //this function will be used only 7 times and no more\r\n  //this function will allow you to mint more tokens  \r\n  function inflationMinting() public onlyOwner  {\r\n      require(mintedTimes <= 7 , \" you can't mint more Nailz tokens\");\r\n   if(mintedTimes==1) {\r\n    _mint(msg.sender, 500000 * 10**9);\r\n    mintedTimes ++;\r\n   } else if(mintedTimes ==2){\r\n     _mint(msg.sender, 250000 * 10**9);\r\n     mintedTimes ++;\r\n   } else if(mintedTimes ==3){\r\n     _mint(msg.sender, 125000 * 10**9);\r\n     mintedTimes ++;\r\n   } else if(mintedTimes==4) {\r\n     _mint(msg.sender, 62500 * 10**9);\r\n     mintedTimes ++;\r\n   } else if(mintedTimes ==5) {\r\n     _mint(msg.sender, 31250 * 10**9);\r\n     mintedTimes ++;\r\n   } else if(mintedTimes ==6) {\r\n     _mint(msg.sender, 15621 * 10**9);\r\n     mintedTimes ++;\r\n   }else if(mintedTimes == 7) {\r\n     _mint(msg.sender, 15621 * 10**9);\r\n     mintedTimes ++;\r\n   }\r\n}}\r\n",
  "sourcePath": "C:/Users/Zaid/Desktop/cabin DeFi/src/contracts/NailzToken.sol",
  "ast": {
    "absolutePath": "/C/Users/Zaid/Desktop/cabin DeFi/src/contracts/NailzToken.sol",
    "exportedSymbols": {
      "Context": [
        1250
      ],
      "ERC20": [
        1149
      ],
      "IERC20": [
        1227
      ],
      "NailzToken": [
        177
      ],
      "Ownable": [
        291
      ],
      "SafeMath": [
        646
      ]
    },
    "id": 178,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 178,
        "sourceUnit": 1150,
        "src": "67:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 178,
        "sourceUnit": 292,
        "src": "124:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1149,
              "src": "203:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1149",
                "typeString": "contract ERC20"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "203:5:0"
          },
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 291,
              "src": "210:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$291",
                "typeString": "contract Ownable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "210:7:0"
          }
        ],
        "contractDependencies": [
          291,
          1149,
          1227,
          1250
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 177,
        "linearizedBaseContracts": [
          177,
          291,
          1149,
          1227,
          1250
        ],
        "name": "NailzToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5bb60b76",
            "id": 10,
            "mutability": "mutable",
            "name": "mintedTimes",
            "nodeType": "VariableDeclaration",
            "scope": 177,
            "src": "309:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 8,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "309:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "336:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "471:47:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "484:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 19,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "484:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000_by_1",
                          "typeString": "int_const 1000000000000000"
                        },
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030303030",
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "496:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000_by_1",
                            "typeString": "int_const 1000000000"
                          },
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 21,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "506:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "39",
                            "id": 22,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "510:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9_by_1",
                              "typeString": "int_const 9"
                            },
                            "value": "9"
                          },
                          "src": "506:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000_by_1",
                            "typeString": "int_const 1000000000"
                          }
                        },
                        "src": "496:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000_by_1",
                          "typeString": "int_const 1000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000_by_1",
                          "typeString": "int_const 1000000000000000"
                        }
                      ],
                      "id": 17,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1025,
                      "src": "478:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "478:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "478:34:0"
                }
              ]
            },
            "id": 28,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4e61696c7a",
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "455:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_672f7b2aa0579ae56b2fdf95c0d68c8f3d6febd082f21ba5b7238374c9e1ed41",
                      "typeString": "literal_string \"Nailz\""
                    },
                    "value": "Nailz"
                  },
                  {
                    "hexValue": "4e4c5a",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "464:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_13f0a292c75106aab4ea1d57a31c2cb94bc124eac1287a1957a5c6ff6f7f8ea4",
                      "typeString": "literal_string \"NLZ\""
                    },
                    "value": "NLZ"
                  }
                ],
                "id": 15,
                "modifierName": {
                  "id": 12,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1149,
                  "src": "449:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$1149_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "449:21:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "439:2:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "471:0:0"
            },
            "scope": 177,
            "src": "428:90:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              725
            ],
            "body": {
              "id": 36,
              "nodeType": "Block",
              "src": "685:21:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "39",
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "699:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_9_by_1",
                      "typeString": "int_const 9"
                    },
                    "value": "9"
                  },
                  "functionReturnParameters": 33,
                  "id": 35,
                  "nodeType": "Return",
                  "src": "692:8:0"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 37,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 30,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "660:8:0"
            },
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "637:2:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "678:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "678:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "677:7:0"
            },
            "scope": 177,
            "src": "620:86:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "967:737:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43,
                          "name": "mintedTimes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "984:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "37",
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "999:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          "value": "7"
                        },
                        "src": "984:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "20796f752063616e2774206d696e74206d6f7265204e61696c7a20746f6b656e73",
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1003:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ce0f28686dcb36e143ac131108067b00dfeac0377f2bf62cbad0af558e4e912",
                          "typeString": "literal_string \" you can't mint more Nailz tokens\""
                        },
                        "value": " you can't mint more Nailz tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ce0f28686dcb36e143ac131108067b00dfeac0377f2bf62cbad0af558e4e912",
                          "typeString": "literal_string \" you can't mint more Nailz tokens\""
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "976:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "976:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "976:63:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49,
                      "name": "mintedTimes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1048:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1061:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1048:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 66,
                        "name": "mintedTimes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1141:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1155:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1141:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 83,
                          "name": "mintedTimes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1236:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1250:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "1236:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 100,
                            "name": "mintedTimes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1331:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "34",
                            "id": 101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1344:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "1331:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 117,
                              "name": "mintedTimes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "1425:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1439:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "1425:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 134,
                                "name": "mintedTimes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10,
                                "src": "1520:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 135,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1534:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "1520:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 151,
                                  "name": "mintedTimes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "1614:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "37",
                                  "id": 152,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1629:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_7_by_1",
                                    "typeString": "int_const 7"
                                  },
                                  "value": "7"
                                },
                                "src": "1614:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 168,
                              "nodeType": "IfStatement",
                              "src": "1611:90:0",
                              "trueBody": {
                                "id": 167,
                                "nodeType": "Block",
                                "src": "1632:69:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 155,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "1646:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 156,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "1646:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        },
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_rational_15621000000000_by_1",
                                            "typeString": "int_const 15621000000000"
                                          },
                                          "id": 161,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "3135363231",
                                            "id": 157,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1658:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_15621_by_1",
                                              "typeString": "int_const 15621"
                                            },
                                            "value": "15621"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_rational_1000000000_by_1",
                                              "typeString": "int_const 1000000000"
                                            },
                                            "id": 160,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "3130",
                                              "id": 158,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1666:2:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                              },
                                              "value": "10"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                              "hexValue": "39",
                                              "id": 159,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1670:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_9_by_1",
                                                "typeString": "int_const 9"
                                              },
                                              "value": "9"
                                            },
                                            "src": "1666:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1000000000_by_1",
                                              "typeString": "int_const 1000000000"
                                            }
                                          },
                                          "src": "1658:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_15621000000000_by_1",
                                            "typeString": "int_const 15621000000000"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          },
                                          {
                                            "typeIdentifier": "t_rational_15621000000000_by_1",
                                            "typeString": "int_const 15621000000000"
                                          }
                                        ],
                                        "id": 154,
                                        "name": "_mint",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1025,
                                        "src": "1640:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256)"
                                        }
                                      },
                                      "id": 162,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1640:32:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 163,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1640:32:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 165,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "1680:14:0",
                                      "subExpression": {
                                        "id": 164,
                                        "name": "mintedTimes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10,
                                        "src": "1680:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "id": 166,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1680:14:0"
                                  }
                                ]
                              }
                            },
                            "id": 169,
                            "nodeType": "IfStatement",
                            "src": "1517:184:0",
                            "trueBody": {
                              "id": 150,
                              "nodeType": "Block",
                              "src": "1537:69:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 138,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "1551:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 139,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "1551:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_rational_15621000000000_by_1",
                                          "typeString": "int_const 15621000000000"
                                        },
                                        "id": 144,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "3135363231",
                                          "id": 140,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1563:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_15621_by_1",
                                            "typeString": "int_const 15621"
                                          },
                                          "value": "15621"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_rational_1000000000_by_1",
                                            "typeString": "int_const 1000000000"
                                          },
                                          "id": 143,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "3130",
                                            "id": 141,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1571:2:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "**",
                                          "rightExpression": {
                                            "hexValue": "39",
                                            "id": 142,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1575:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_9_by_1",
                                              "typeString": "int_const 9"
                                            },
                                            "value": "9"
                                          },
                                          "src": "1571:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1000000000_by_1",
                                            "typeString": "int_const 1000000000"
                                          }
                                        },
                                        "src": "1563:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_15621000000000_by_1",
                                          "typeString": "int_const 15621000000000"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_15621000000000_by_1",
                                          "typeString": "int_const 15621000000000"
                                        }
                                      ],
                                      "id": 137,
                                      "name": "_mint",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1025,
                                      "src": "1545:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                        "typeString": "function (address,uint256)"
                                      }
                                    },
                                    "id": 145,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1545:32:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 146,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1545:32:0"
                                },
                                {
                                  "expression": {
                                    "id": 148,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "1585:14:0",
                                    "subExpression": {
                                      "id": 147,
                                      "name": "mintedTimes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10,
                                      "src": "1585:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "id": 149,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1585:14:0"
                                }
                              ]
                            }
                          },
                          "id": 170,
                          "nodeType": "IfStatement",
                          "src": "1422:279:0",
                          "trueBody": {
                            "id": 133,
                            "nodeType": "Block",
                            "src": "1442:69:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 121,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "1456:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 122,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "1456:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_31250000000000_by_1",
                                        "typeString": "int_const 31250000000000"
                                      },
                                      "id": 127,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3331323530",
                                        "id": 123,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1468:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_31250_by_1",
                                          "typeString": "int_const 31250"
                                        },
                                        "value": "31250"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_rational_1000000000_by_1",
                                          "typeString": "int_const 1000000000"
                                        },
                                        "id": 126,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "3130",
                                          "id": 124,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1476:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "**",
                                        "rightExpression": {
                                          "hexValue": "39",
                                          "id": 125,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1480:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_9_by_1",
                                            "typeString": "int_const 9"
                                          },
                                          "value": "9"
                                        },
                                        "src": "1476:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000000_by_1",
                                          "typeString": "int_const 1000000000"
                                        }
                                      },
                                      "src": "1468:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_31250000000000_by_1",
                                        "typeString": "int_const 31250000000000"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      },
                                      {
                                        "typeIdentifier": "t_rational_31250000000000_by_1",
                                        "typeString": "int_const 31250000000000"
                                      }
                                    ],
                                    "id": 120,
                                    "name": "_mint",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1025,
                                    "src": "1450:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function (address,uint256)"
                                    }
                                  },
                                  "id": 128,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1450:32:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 129,
                                "nodeType": "ExpressionStatement",
                                "src": "1450:32:0"
                              },
                              {
                                "expression": {
                                  "id": 131,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "1490:14:0",
                                  "subExpression": {
                                    "id": 130,
                                    "name": "mintedTimes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10,
                                    "src": "1490:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "id": 132,
                                "nodeType": "ExpressionStatement",
                                "src": "1490:14:0"
                              }
                            ]
                          }
                        },
                        "id": 171,
                        "nodeType": "IfStatement",
                        "src": "1328:373:0",
                        "trueBody": {
                          "id": 116,
                          "nodeType": "Block",
                          "src": "1347:69:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 104,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "1361:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 105,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1361:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_62500000000000_by_1",
                                      "typeString": "int_const 62500000000000"
                                    },
                                    "id": 110,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3632353030",
                                      "id": 106,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1373:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_62500_by_1",
                                        "typeString": "int_const 62500"
                                      },
                                      "value": "62500"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000000_by_1",
                                        "typeString": "int_const 1000000000"
                                      },
                                      "id": 109,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 107,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1381:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "39",
                                        "id": 108,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1385:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_9_by_1",
                                          "typeString": "int_const 9"
                                        },
                                        "value": "9"
                                      },
                                      "src": "1381:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000000_by_1",
                                        "typeString": "int_const 1000000000"
                                      }
                                    },
                                    "src": "1373:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_62500000000000_by_1",
                                      "typeString": "int_const 62500000000000"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_62500000000000_by_1",
                                      "typeString": "int_const 62500000000000"
                                    }
                                  ],
                                  "id": 103,
                                  "name": "_mint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1025,
                                  "src": "1355:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1355:32:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 112,
                              "nodeType": "ExpressionStatement",
                              "src": "1355:32:0"
                            },
                            {
                              "expression": {
                                "id": 114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "1395:14:0",
                                "subExpression": {
                                  "id": 113,
                                  "name": "mintedTimes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "1395:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 115,
                              "nodeType": "ExpressionStatement",
                              "src": "1395:14:0"
                            }
                          ]
                        }
                      },
                      "id": 172,
                      "nodeType": "IfStatement",
                      "src": "1233:468:0",
                      "trueBody": {
                        "id": 99,
                        "nodeType": "Block",
                        "src": "1252:70:0",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 87,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1266:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 88,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1266:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_125000000000000_by_1",
                                    "typeString": "int_const 125000000000000"
                                  },
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "313235303030",
                                    "id": 89,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1278:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_125000_by_1",
                                      "typeString": "int_const 125000"
                                    },
                                    "value": "125000"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_1000000000_by_1",
                                      "typeString": "int_const 1000000000"
                                    },
                                    "id": 92,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3130",
                                      "id": 90,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1287:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "hexValue": "39",
                                      "id": 91,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1291:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_9_by_1",
                                        "typeString": "int_const 9"
                                      },
                                      "value": "9"
                                    },
                                    "src": "1287:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000_by_1",
                                      "typeString": "int_const 1000000000"
                                    }
                                  },
                                  "src": "1278:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_125000000000000_by_1",
                                    "typeString": "int_const 125000000000000"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_125000000000000_by_1",
                                    "typeString": "int_const 125000000000000"
                                  }
                                ],
                                "id": 86,
                                "name": "_mint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1025,
                                "src": "1260:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256)"
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1260:33:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 95,
                            "nodeType": "ExpressionStatement",
                            "src": "1260:33:0"
                          },
                          {
                            "expression": {
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "1301:14:0",
                              "subExpression": {
                                "id": 96,
                                "name": "mintedTimes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10,
                                "src": "1301:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 98,
                            "nodeType": "ExpressionStatement",
                            "src": "1301:14:0"
                          }
                        ]
                      }
                    },
                    "id": 173,
                    "nodeType": "IfStatement",
                    "src": "1138:563:0",
                    "trueBody": {
                      "id": 82,
                      "nodeType": "Block",
                      "src": "1157:70:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 70,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1171:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 71,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1171:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_250000000000000_by_1",
                                  "typeString": "int_const 250000000000000"
                                },
                                "id": 76,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "323530303030",
                                  "id": 72,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1183:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_250000_by_1",
                                    "typeString": "int_const 250000"
                                  },
                                  "value": "250000"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000_by_1",
                                    "typeString": "int_const 1000000000"
                                  },
                                  "id": 75,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 73,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1192:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "39",
                                    "id": 74,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1196:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_9_by_1",
                                      "typeString": "int_const 9"
                                    },
                                    "value": "9"
                                  },
                                  "src": "1192:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000_by_1",
                                    "typeString": "int_const 1000000000"
                                  }
                                },
                                "src": "1183:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_250000000000000_by_1",
                                  "typeString": "int_const 250000000000000"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_250000000000000_by_1",
                                  "typeString": "int_const 250000000000000"
                                }
                              ],
                              "id": 69,
                              "name": "_mint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1025,
                              "src": "1165:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,uint256)"
                              }
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1165:33:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 78,
                          "nodeType": "ExpressionStatement",
                          "src": "1165:33:0"
                        },
                        {
                          "expression": {
                            "id": 80,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1206:14:0",
                            "subExpression": {
                              "id": 79,
                              "name": "mintedTimes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "1206:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 81,
                          "nodeType": "ExpressionStatement",
                          "src": "1206:14:0"
                        }
                      ]
                    }
                  },
                  "id": 174,
                  "nodeType": "IfStatement",
                  "src": "1045:656:0",
                  "trueBody": {
                    "id": 65,
                    "nodeType": "Block",
                    "src": "1064:68:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 53,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1077:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 54,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1077:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_500000000000000_by_1",
                                "typeString": "int_const 500000000000000"
                              },
                              "id": 59,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "353030303030",
                                "id": 55,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1089:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_500000_by_1",
                                  "typeString": "int_const 500000"
                                },
                                "value": "500000"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000000_by_1",
                                  "typeString": "int_const 1000000000"
                                },
                                "id": 58,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 56,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1098:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "39",
                                  "id": 57,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1102:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_9_by_1",
                                    "typeString": "int_const 9"
                                  },
                                  "value": "9"
                                },
                                "src": "1098:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000_by_1",
                                  "typeString": "int_const 1000000000"
                                }
                              },
                              "src": "1089:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_500000000000000_by_1",
                                "typeString": "int_const 500000000000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_500000000000000_by_1",
                                "typeString": "int_const 500000000000000"
                              }
                            ],
                            "id": 52,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1025,
                            "src": "1071:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1071:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61,
                        "nodeType": "ExpressionStatement",
                        "src": "1071:33:0"
                      },
                      {
                        "expression": {
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1111:14:0",
                          "subExpression": {
                            "id": 62,
                            "name": "mintedTimes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1111:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 64,
                        "nodeType": "ExpressionStatement",
                        "src": "1111:14:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "3e0f2174",
            "id": 176,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40,
                "modifierName": {
                  "id": 39,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 240,
                  "src": "956:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "956:9:0"
              }
            ],
            "name": "inflationMinting",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:2:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "967:0:0"
            },
            "scope": 177,
            "src": "921:783:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 178,
        "src": "180:1525:0"
      }
    ],
    "src": "33:1674:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/Zaid/Desktop/cabin DeFi/src/contracts/NailzToken.sol",
      "exportedSymbols": {
        "Context": [
          1250
        ],
        "ERC20": [
          1149
        ],
        "IERC20": [
          1227
        ],
        "NailzToken": [
          177
        ],
        "Ownable": [
          291
        ],
        "SafeMath": [
          646
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".22",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "attributes": {
          "SourceUnit": 1150,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "scope": 178,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "67:55:0"
      },
      {
        "attributes": {
          "SourceUnit": 292,
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "scope": 178,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "124:52:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            291,
            1149,
            1227,
            1250
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            177,
            291,
            1149,
            1227,
            1250
          ],
          "name": "NailzToken",
          "scope": 178
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 1149,
                  "type": "contract ERC20"
                },
                "id": 4,
                "name": "UserDefinedTypeName",
                "src": "203:5:0"
              }
            ],
            "id": 5,
            "name": "InheritanceSpecifier",
            "src": "203:5:0"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Ownable",
                  "referencedDeclaration": 291,
                  "type": "contract Ownable"
                },
                "id": 6,
                "name": "UserDefinedTypeName",
                "src": "210:7:0"
              }
            ],
            "id": 7,
            "name": "InheritanceSpecifier",
            "src": "210:7:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "5bb60b76",
              "mutability": "mutable",
              "name": "mintedTimes",
              "scope": 177,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint8",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint8",
                  "type": "uint8"
                },
                "id": 8,
                "name": "ElementaryTypeName",
                "src": "309:5:0"
              },
              {
                "attributes": {
                  "hexvalue": "31",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 1",
                  "value": "1"
                },
                "id": 9,
                "name": "Literal",
                "src": "336:1:0"
              }
            ],
            "id": 10,
            "name": "VariableDeclaration",
            "src": "309:28:0"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 177,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 11,
                "name": "ParameterList",
                "src": "439:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 16,
                "name": "ParameterList",
                "src": "471:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1149,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 12,
                    "name": "Identifier",
                    "src": "449:5:0"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4e61696c7a",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"Nailz\"",
                      "value": "Nailz"
                    },
                    "id": 13,
                    "name": "Literal",
                    "src": "455:7:0"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4e4c5a",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"NLZ\"",
                      "value": "NLZ"
                    },
                    "id": 14,
                    "name": "Literal",
                    "src": "464:5:0"
                  }
                ],
                "id": 15,
                "name": "ModifierInvocation",
                "src": "449:21:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_1000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1025,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 17,
                            "name": "Identifier",
                            "src": "478:5:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 18,
                                "name": "Identifier",
                                "src": "484:3:0"
                              }
                            ],
                            "id": 19,
                            "name": "MemberAccess",
                            "src": "484:10:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000_by_1",
                                "typeString": "int_const 1000000000000000"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "operator": "*",
                              "type": "int_const 1000000000000000"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "hexvalue": "31303030303030",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 1000000",
                                  "value": "1000000"
                                },
                                "id": 20,
                                "name": "Literal",
                                "src": "496:7:0"
                              },
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000_by_1",
                                    "typeString": "int_const 1000000000"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "operator": "**",
                                  "type": "int_const 1000000000"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "hexvalue": "3130",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 10",
                                      "value": "10"
                                    },
                                    "id": 21,
                                    "name": "Literal",
                                    "src": "506:2:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "39",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 9",
                                      "value": "9"
                                    },
                                    "id": 22,
                                    "name": "Literal",
                                    "src": "510:1:0"
                                  }
                                ],
                                "id": 23,
                                "name": "BinaryOperation",
                                "src": "506:5:0"
                              }
                            ],
                            "id": 24,
                            "name": "BinaryOperation",
                            "src": "496:15:0"
                          }
                        ],
                        "id": 25,
                        "name": "FunctionCall",
                        "src": "478:34:0"
                      }
                    ],
                    "id": 26,
                    "name": "ExpressionStatement",
                    "src": "478:34:0"
                  }
                ],
                "id": 27,
                "name": "Block",
                "src": "471:47:0"
              }
            ],
            "id": 28,
            "name": "FunctionDefinition",
            "src": "428:90:0"
          },
          {
            "attributes": {
              "baseFunctions": [
                725
              ],
              "functionSelector": "313ce567",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "decimals",
              "scope": 177,
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 30,
                "name": "OverrideSpecifier",
                "src": "660:8:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 29,
                "name": "ParameterList",
                "src": "637:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 37,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 31,
                        "name": "ElementaryTypeName",
                        "src": "678:5:0"
                      }
                    ],
                    "id": 32,
                    "name": "VariableDeclaration",
                    "src": "678:5:0"
                  }
                ],
                "id": 33,
                "name": "ParameterList",
                "src": "677:7:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 33
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "39",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "number",
                          "type": "int_const 9",
                          "value": "9"
                        },
                        "id": 34,
                        "name": "Literal",
                        "src": "699:1:0"
                      }
                    ],
                    "id": 35,
                    "name": "Return",
                    "src": "692:8:0"
                  }
                ],
                "id": 36,
                "name": "Block",
                "src": "685:21:0"
              }
            ],
            "id": 37,
            "name": "FunctionDefinition",
            "src": "620:86:0"
          },
          {
            "attributes": {
              "functionSelector": "3e0f2174",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "inflationMinting",
              "scope": 177,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 38,
                "name": "ParameterList",
                "src": "946:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 41,
                "name": "ParameterList",
                "src": "967:0:0"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 240,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 39,
                    "name": "Identifier",
                    "src": "956:9:0"
                  }
                ],
                "id": 40,
                "name": "ModifierInvocation",
                "src": "956:9:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7ce0f28686dcb36e143ac131108067b00dfeac0377f2bf62cbad0af558e4e912",
                                  "typeString": "literal_string \" you can't mint more Nailz tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 42,
                            "name": "Identifier",
                            "src": "976:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10,
                                  "type": "uint8",
                                  "value": "mintedTimes"
                                },
                                "id": 43,
                                "name": "Identifier",
                                "src": "984:11:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "37",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 7",
                                  "value": "7"
                                },
                                "id": 44,
                                "name": "Literal",
                                "src": "999:1:0"
                              }
                            ],
                            "id": 45,
                            "name": "BinaryOperation",
                            "src": "984:16:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "20796f752063616e2774206d696e74206d6f7265204e61696c7a20746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \" you can't mint more Nailz tokens\"",
                              "value": " you can't mint more Nailz tokens"
                            },
                            "id": 46,
                            "name": "Literal",
                            "src": "1003:35:0"
                          }
                        ],
                        "id": 47,
                        "name": "FunctionCall",
                        "src": "976:63:0"
                      }
                    ],
                    "id": 48,
                    "name": "ExpressionStatement",
                    "src": "976:63:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10,
                              "type": "uint8",
                              "value": "mintedTimes"
                            },
                            "id": 49,
                            "name": "Identifier",
                            "src": "1048:11:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 50,
                            "name": "Literal",
                            "src": "1061:1:0"
                          }
                        ],
                        "id": 51,
                        "name": "BinaryOperation",
                        "src": "1048:14:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_500000000000000_by_1",
                                          "typeString": "int_const 500000000000000"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1025,
                                      "type": "function (address,uint256)",
                                      "value": "_mint"
                                    },
                                    "id": 52,
                                    "name": "Identifier",
                                    "src": "1071:5:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 53,
                                        "name": "Identifier",
                                        "src": "1077:3:0"
                                      }
                                    ],
                                    "id": 54,
                                    "name": "MemberAccess",
                                    "src": "1077:10:0"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_500000000000000_by_1",
                                        "typeString": "int_const 500000000000000"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "operator": "*",
                                      "type": "int_const 500000000000000"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "hexvalue": "353030303030",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "number",
                                          "type": "int_const 500000",
                                          "value": "500000"
                                        },
                                        "id": 55,
                                        "name": "Literal",
                                        "src": "1089:6:0"
                                      },
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_rational_1000000000_by_1",
                                            "typeString": "int_const 1000000000"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "operator": "**",
                                          "type": "int_const 1000000000"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "hexvalue": "3130",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "number",
                                              "type": "int_const 10",
                                              "value": "10"
                                            },
                                            "id": 56,
                                            "name": "Literal",
                                            "src": "1098:2:0"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "39",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "number",
                                              "type": "int_const 9",
                                              "value": "9"
                                            },
                                            "id": 57,
                                            "name": "Literal",
                                            "src": "1102:1:0"
                                          }
                                        ],
                                        "id": 58,
                                        "name": "BinaryOperation",
                                        "src": "1098:5:0"
                                      }
                                    ],
                                    "id": 59,
                                    "name": "BinaryOperation",
                                    "src": "1089:14:0"
                                  }
                                ],
                                "id": 60,
                                "name": "FunctionCall",
                                "src": "1071:33:0"
                              }
                            ],
                            "id": 61,
                            "name": "ExpressionStatement",
                            "src": "1071:33:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "++",
                                  "prefix": false,
                                  "type": "uint8"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10,
                                      "type": "uint8",
                                      "value": "mintedTimes"
                                    },
                                    "id": 62,
                                    "name": "Identifier",
                                    "src": "1111:11:0"
                                  }
                                ],
                                "id": 63,
                                "name": "UnaryOperation",
                                "src": "1111:14:0"
                              }
                            ],
                            "id": 64,
                            "name": "ExpressionStatement",
                            "src": "1111:14:0"
                          }
                        ],
                        "id": 65,
                        "name": "Block",
                        "src": "1064:68:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10,
                                  "type": "uint8",
                                  "value": "mintedTimes"
                                },
                                "id": 66,
                                "name": "Identifier",
                                "src": "1141:11:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 67,
                                "name": "Literal",
                                "src": "1155:1:0"
                              }
                            ],
                            "id": 68,
                            "name": "BinaryOperation",
                            "src": "1141:15:0"
                          },
                          {
                            "children": [
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "tuple()",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            },
                                            {
                                              "typeIdentifier": "t_rational_250000000000000_by_1",
                                              "typeString": "int_const 250000000000000"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1025,
                                          "type": "function (address,uint256)",
                                          "value": "_mint"
                                        },
                                        "id": 69,
                                        "name": "Identifier",
                                        "src": "1165:5:0"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": -15,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 70,
                                            "name": "Identifier",
                                            "src": "1171:3:0"
                                          }
                                        ],
                                        "id": 71,
                                        "name": "MemberAccess",
                                        "src": "1171:10:0"
                                      },
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_rational_250000000000000_by_1",
                                            "typeString": "int_const 250000000000000"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "operator": "*",
                                          "type": "int_const 250000000000000"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "hexvalue": "323530303030",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "number",
                                              "type": "int_const 250000",
                                              "value": "250000"
                                            },
                                            "id": 72,
                                            "name": "Literal",
                                            "src": "1183:6:0"
                                          },
                                          {
                                            "attributes": {
                                              "commonType": {
                                                "typeIdentifier": "t_rational_1000000000_by_1",
                                                "typeString": "int_const 1000000000"
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "operator": "**",
                                              "type": "int_const 1000000000"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "hexvalue": "3130",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "token": "number",
                                                  "type": "int_const 10",
                                                  "value": "10"
                                                },
                                                "id": 73,
                                                "name": "Literal",
                                                "src": "1192:2:0"
                                              },
                                              {
                                                "attributes": {
                                                  "hexvalue": "39",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "token": "number",
                                                  "type": "int_const 9",
                                                  "value": "9"
                                                },
                                                "id": 74,
                                                "name": "Literal",
                                                "src": "1196:1:0"
                                              }
                                            ],
                                            "id": 75,
                                            "name": "BinaryOperation",
                                            "src": "1192:5:0"
                                          }
                                        ],
                                        "id": 76,
                                        "name": "BinaryOperation",
                                        "src": "1183:14:0"
                                      }
                                    ],
                                    "id": 77,
                                    "name": "FunctionCall",
                                    "src": "1165:33:0"
                                  }
                                ],
                                "id": 78,
                                "name": "ExpressionStatement",
                                "src": "1165:33:0"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "++",
                                      "prefix": false,
                                      "type": "uint8"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 10,
                                          "type": "uint8",
                                          "value": "mintedTimes"
                                        },
                                        "id": 79,
                                        "name": "Identifier",
                                        "src": "1206:11:0"
                                      }
                                    ],
                                    "id": 80,
                                    "name": "UnaryOperation",
                                    "src": "1206:14:0"
                                  }
                                ],
                                "id": 81,
                                "name": "ExpressionStatement",
                                "src": "1206:14:0"
                              }
                            ],
                            "id": 82,
                            "name": "Block",
                            "src": "1157:70:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10,
                                      "type": "uint8",
                                      "value": "mintedTimes"
                                    },
                                    "id": 83,
                                    "name": "Identifier",
                                    "src": "1236:11:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "33",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 3",
                                      "value": "3"
                                    },
                                    "id": 84,
                                    "name": "Literal",
                                    "src": "1250:1:0"
                                  }
                                ],
                                "id": 85,
                                "name": "BinaryOperation",
                                "src": "1236:15:0"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "tuple()",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                },
                                                {
                                                  "typeIdentifier": "t_rational_125000000000000_by_1",
                                                  "typeString": "int_const 125000000000000"
                                                }
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1025,
                                              "type": "function (address,uint256)",
                                              "value": "_mint"
                                            },
                                            "id": 86,
                                            "name": "Identifier",
                                            "src": "1260:5:0"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": -15,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 87,
                                                "name": "Identifier",
                                                "src": "1266:3:0"
                                              }
                                            ],
                                            "id": 88,
                                            "name": "MemberAccess",
                                            "src": "1266:10:0"
                                          },
                                          {
                                            "attributes": {
                                              "commonType": {
                                                "typeIdentifier": "t_rational_125000000000000_by_1",
                                                "typeString": "int_const 125000000000000"
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "operator": "*",
                                              "type": "int_const 125000000000000"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "hexvalue": "313235303030",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "token": "number",
                                                  "type": "int_const 125000",
                                                  "value": "125000"
                                                },
                                                "id": 89,
                                                "name": "Literal",
                                                "src": "1278:6:0"
                                              },
                                              {
                                                "attributes": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_rational_1000000000_by_1",
                                                    "typeString": "int_const 1000000000"
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "operator": "**",
                                                  "type": "int_const 1000000000"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "hexvalue": "3130",
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "token": "number",
                                                      "type": "int_const 10",
                                                      "value": "10"
                                                    },
                                                    "id": 90,
                                                    "name": "Literal",
                                                    "src": "1287:2:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "hexvalue": "39",
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "token": "number",
                                                      "type": "int_const 9",
                                                      "value": "9"
                                                    },
                                                    "id": 91,
                                                    "name": "Literal",
                                                    "src": "1291:1:0"
                                                  }
                                                ],
                                                "id": 92,
                                                "name": "BinaryOperation",
                                                "src": "1287:5:0"
                                              }
                                            ],
                                            "id": 93,
                                            "name": "BinaryOperation",
                                            "src": "1278:14:0"
                                          }
                                        ],
                                        "id": 94,
                                        "name": "FunctionCall",
                                        "src": "1260:33:0"
                                      }
                                    ],
                                    "id": 95,
                                    "name": "ExpressionStatement",
                                    "src": "1260:33:0"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "++",
                                          "prefix": false,
                                          "type": "uint8"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 10,
                                              "type": "uint8",
                                              "value": "mintedTimes"
                                            },
                                            "id": 96,
                                            "name": "Identifier",
                                            "src": "1301:11:0"
                                          }
                                        ],
                                        "id": 97,
                                        "name": "UnaryOperation",
                                        "src": "1301:14:0"
                                      }
                                    ],
                                    "id": 98,
                                    "name": "ExpressionStatement",
                                    "src": "1301:14:0"
                                  }
                                ],
                                "id": 99,
                                "name": "Block",
                                "src": "1252:70:0"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "==",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 10,
                                          "type": "uint8",
                                          "value": "mintedTimes"
                                        },
                                        "id": 100,
                                        "name": "Identifier",
                                        "src": "1331:11:0"
                                      },
                                      {
                                        "attributes": {
                                          "hexvalue": "34",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "number",
                                          "type": "int_const 4",
                                          "value": "4"
                                        },
                                        "id": 101,
                                        "name": "Literal",
                                        "src": "1344:1:0"
                                      }
                                    ],
                                    "id": 102,
                                    "name": "BinaryOperation",
                                    "src": "1331:14:0"
                                  },
                                  {
                                    "children": [
                                      {
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "tryCall": false,
                                              "type": "tuple()",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address_payable",
                                                      "typeString": "address payable"
                                                    },
                                                    {
                                                      "typeIdentifier": "t_rational_62500000000000_by_1",
                                                      "typeString": "int_const 62500000000000"
                                                    }
                                                  ],
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1025,
                                                  "type": "function (address,uint256)",
                                                  "value": "_mint"
                                                },
                                                "id": 103,
                                                "name": "Identifier",
                                                "src": "1355:5:0"
                                              },
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": -15,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 104,
                                                    "name": "Identifier",
                                                    "src": "1361:3:0"
                                                  }
                                                ],
                                                "id": 105,
                                                "name": "MemberAccess",
                                                "src": "1361:10:0"
                                              },
                                              {
                                                "attributes": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_rational_62500000000000_by_1",
                                                    "typeString": "int_const 62500000000000"
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "operator": "*",
                                                  "type": "int_const 62500000000000"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "hexvalue": "3632353030",
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "token": "number",
                                                      "type": "int_const 62500",
                                                      "value": "62500"
                                                    },
                                                    "id": 106,
                                                    "name": "Literal",
                                                    "src": "1373:5:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_rational_1000000000_by_1",
                                                        "typeString": "int_const 1000000000"
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "operator": "**",
                                                      "type": "int_const 1000000000"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "hexvalue": "3130",
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "token": "number",
                                                          "type": "int_const 10",
                                                          "value": "10"
                                                        },
                                                        "id": 107,
                                                        "name": "Literal",
                                                        "src": "1381:2:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "hexvalue": "39",
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "token": "number",
                                                          "type": "int_const 9",
                                                          "value": "9"
                                                        },
                                                        "id": 108,
                                                        "name": "Literal",
                                                        "src": "1385:1:0"
                                                      }
                                                    ],
                                                    "id": 109,
                                                    "name": "BinaryOperation",
                                                    "src": "1381:5:0"
                                                  }
                                                ],
                                                "id": 110,
                                                "name": "BinaryOperation",
                                                "src": "1373:13:0"
                                              }
                                            ],
                                            "id": 111,
                                            "name": "FunctionCall",
                                            "src": "1355:32:0"
                                          }
                                        ],
                                        "id": 112,
                                        "name": "ExpressionStatement",
                                        "src": "1355:32:0"
                                      },
                                      {
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "++",
                                              "prefix": false,
                                              "type": "uint8"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 10,
                                                  "type": "uint8",
                                                  "value": "mintedTimes"
                                                },
                                                "id": 113,
                                                "name": "Identifier",
                                                "src": "1395:11:0"
                                              }
                                            ],
                                            "id": 114,
                                            "name": "UnaryOperation",
                                            "src": "1395:14:0"
                                          }
                                        ],
                                        "id": 115,
                                        "name": "ExpressionStatement",
                                        "src": "1395:14:0"
                                      }
                                    ],
                                    "id": 116,
                                    "name": "Block",
                                    "src": "1347:69:0"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "==",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 10,
                                              "type": "uint8",
                                              "value": "mintedTimes"
                                            },
                                            "id": 117,
                                            "name": "Identifier",
                                            "src": "1425:11:0"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "35",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "number",
                                              "type": "int_const 5",
                                              "value": "5"
                                            },
                                            "id": 118,
                                            "name": "Literal",
                                            "src": "1439:1:0"
                                          }
                                        ],
                                        "id": 119,
                                        "name": "BinaryOperation",
                                        "src": "1425:15:0"
                                      },
                                      {
                                        "children": [
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "tryCall": false,
                                                  "type": "tuple()",
                                                  "type_conversion": false
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_address_payable",
                                                          "typeString": "address payable"
                                                        },
                                                        {
                                                          "typeIdentifier": "t_rational_31250000000000_by_1",
                                                          "typeString": "int_const 31250000000000"
                                                        }
                                                      ],
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 1025,
                                                      "type": "function (address,uint256)",
                                                      "value": "_mint"
                                                    },
                                                    "id": 120,
                                                    "name": "Identifier",
                                                    "src": "1450:5:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "sender",
                                                      "type": "address payable"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": -15,
                                                          "type": "msg",
                                                          "value": "msg"
                                                        },
                                                        "id": 121,
                                                        "name": "Identifier",
                                                        "src": "1456:3:0"
                                                      }
                                                    ],
                                                    "id": 122,
                                                    "name": "MemberAccess",
                                                    "src": "1456:10:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_rational_31250000000000_by_1",
                                                        "typeString": "int_const 31250000000000"
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "operator": "*",
                                                      "type": "int_const 31250000000000"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "hexvalue": "3331323530",
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "token": "number",
                                                          "type": "int_const 31250",
                                                          "value": "31250"
                                                        },
                                                        "id": 123,
                                                        "name": "Literal",
                                                        "src": "1468:5:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_rational_1000000000_by_1",
                                                            "typeString": "int_const 1000000000"
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "operator": "**",
                                                          "type": "int_const 1000000000"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "hexvalue": "3130",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "token": "number",
                                                              "type": "int_const 10",
                                                              "value": "10"
                                                            },
                                                            "id": 124,
                                                            "name": "Literal",
                                                            "src": "1476:2:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "hexvalue": "39",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "token": "number",
                                                              "type": "int_const 9",
                                                              "value": "9"
                                                            },
                                                            "id": 125,
                                                            "name": "Literal",
                                                            "src": "1480:1:0"
                                                          }
                                                        ],
                                                        "id": 126,
                                                        "name": "BinaryOperation",
                                                        "src": "1476:5:0"
                                                      }
                                                    ],
                                                    "id": 127,
                                                    "name": "BinaryOperation",
                                                    "src": "1468:13:0"
                                                  }
                                                ],
                                                "id": 128,
                                                "name": "FunctionCall",
                                                "src": "1450:32:0"
                                              }
                                            ],
                                            "id": 129,
                                            "name": "ExpressionStatement",
                                            "src": "1450:32:0"
                                          },
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "++",
                                                  "prefix": false,
                                                  "type": "uint8"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 10,
                                                      "type": "uint8",
                                                      "value": "mintedTimes"
                                                    },
                                                    "id": 130,
                                                    "name": "Identifier",
                                                    "src": "1490:11:0"
                                                  }
                                                ],
                                                "id": 131,
                                                "name": "UnaryOperation",
                                                "src": "1490:14:0"
                                              }
                                            ],
                                            "id": 132,
                                            "name": "ExpressionStatement",
                                            "src": "1490:14:0"
                                          }
                                        ],
                                        "id": 133,
                                        "name": "Block",
                                        "src": "1442:69:0"
                                      },
                                      {
                                        "children": [
                                          {
                                            "attributes": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "==",
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 10,
                                                  "type": "uint8",
                                                  "value": "mintedTimes"
                                                },
                                                "id": 134,
                                                "name": "Identifier",
                                                "src": "1520:11:0"
                                              },
                                              {
                                                "attributes": {
                                                  "hexvalue": "36",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "token": "number",
                                                  "type": "int_const 6",
                                                  "value": "6"
                                                },
                                                "id": 135,
                                                "name": "Literal",
                                                "src": "1534:1:0"
                                              }
                                            ],
                                            "id": 136,
                                            "name": "BinaryOperation",
                                            "src": "1520:15:0"
                                          },
                                          {
                                            "children": [
                                              {
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "isStructConstructorCall": false,
                                                      "lValueRequested": false,
                                                      "names": [
                                                        null
                                                      ],
                                                      "tryCall": false,
                                                      "type": "tuple()",
                                                      "type_conversion": false
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_address_payable",
                                                              "typeString": "address payable"
                                                            },
                                                            {
                                                              "typeIdentifier": "t_rational_15621000000000_by_1",
                                                              "typeString": "int_const 15621000000000"
                                                            }
                                                          ],
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 1025,
                                                          "type": "function (address,uint256)",
                                                          "value": "_mint"
                                                        },
                                                        "id": 137,
                                                        "name": "Identifier",
                                                        "src": "1545:5:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "member_name": "sender",
                                                          "type": "address payable"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": -15,
                                                              "type": "msg",
                                                              "value": "msg"
                                                            },
                                                            "id": 138,
                                                            "name": "Identifier",
                                                            "src": "1551:3:0"
                                                          }
                                                        ],
                                                        "id": 139,
                                                        "name": "MemberAccess",
                                                        "src": "1551:10:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_rational_15621000000000_by_1",
                                                            "typeString": "int_const 15621000000000"
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "operator": "*",
                                                          "type": "int_const 15621000000000"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "hexvalue": "3135363231",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "token": "number",
                                                              "type": "int_const 15621",
                                                              "value": "15621"
                                                            },
                                                            "id": 140,
                                                            "name": "Literal",
                                                            "src": "1563:5:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_rational_1000000000_by_1",
                                                                "typeString": "int_const 1000000000"
                                                              },
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "operator": "**",
                                                              "type": "int_const 1000000000"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "hexvalue": "3130",
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "token": "number",
                                                                  "type": "int_const 10",
                                                                  "value": "10"
                                                                },
                                                                "id": 141,
                                                                "name": "Literal",
                                                                "src": "1571:2:0"
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "hexvalue": "39",
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "token": "number",
                                                                  "type": "int_const 9",
                                                                  "value": "9"
                                                                },
                                                                "id": 142,
                                                                "name": "Literal",
                                                                "src": "1575:1:0"
                                                              }
                                                            ],
                                                            "id": 143,
                                                            "name": "BinaryOperation",
                                                            "src": "1571:5:0"
                                                          }
                                                        ],
                                                        "id": 144,
                                                        "name": "BinaryOperation",
                                                        "src": "1563:13:0"
                                                      }
                                                    ],
                                                    "id": 145,
                                                    "name": "FunctionCall",
                                                    "src": "1545:32:0"
                                                  }
                                                ],
                                                "id": 146,
                                                "name": "ExpressionStatement",
                                                "src": "1545:32:0"
                                              },
                                              {
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "++",
                                                      "prefix": false,
                                                      "type": "uint8"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 10,
                                                          "type": "uint8",
                                                          "value": "mintedTimes"
                                                        },
                                                        "id": 147,
                                                        "name": "Identifier",
                                                        "src": "1585:11:0"
                                                      }
                                                    ],
                                                    "id": 148,
                                                    "name": "UnaryOperation",
                                                    "src": "1585:14:0"
                                                  }
                                                ],
                                                "id": 149,
                                                "name": "ExpressionStatement",
                                                "src": "1585:14:0"
                                              }
                                            ],
                                            "id": 150,
                                            "name": "Block",
                                            "src": "1537:69:0"
                                          },
                                          {
                                            "attributes": {},
                                            "children": [
                                              {
                                                "attributes": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "==",
                                                  "type": "bool"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 10,
                                                      "type": "uint8",
                                                      "value": "mintedTimes"
                                                    },
                                                    "id": 151,
                                                    "name": "Identifier",
                                                    "src": "1614:11:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "hexvalue": "37",
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "token": "number",
                                                      "type": "int_const 7",
                                                      "value": "7"
                                                    },
                                                    "id": 152,
                                                    "name": "Literal",
                                                    "src": "1629:1:0"
                                                  }
                                                ],
                                                "id": 153,
                                                "name": "BinaryOperation",
                                                "src": "1614:16:0"
                                              },
                                              {
                                                "children": [
                                                  {
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "isStructConstructorCall": false,
                                                          "lValueRequested": false,
                                                          "names": [
                                                            null
                                                          ],
                                                          "tryCall": false,
                                                          "type": "tuple()",
                                                          "type_conversion": false
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": [
                                                                {
                                                                  "typeIdentifier": "t_address_payable",
                                                                  "typeString": "address payable"
                                                                },
                                                                {
                                                                  "typeIdentifier": "t_rational_15621000000000_by_1",
                                                                  "typeString": "int_const 15621000000000"
                                                                }
                                                              ],
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 1025,
                                                              "type": "function (address,uint256)",
                                                              "value": "_mint"
                                                            },
                                                            "id": 154,
                                                            "name": "Identifier",
                                                            "src": "1640:5:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "sender",
                                                              "type": "address payable"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": -15,
                                                                  "type": "msg",
                                                                  "value": "msg"
                                                                },
                                                                "id": 155,
                                                                "name": "Identifier",
                                                                "src": "1646:3:0"
                                                              }
                                                            ],
                                                            "id": 156,
                                                            "name": "MemberAccess",
                                                            "src": "1646:10:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_rational_15621000000000_by_1",
                                                                "typeString": "int_const 15621000000000"
                                                              },
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "operator": "*",
                                                              "type": "int_const 15621000000000"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "hexvalue": "3135363231",
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "token": "number",
                                                                  "type": "int_const 15621",
                                                                  "value": "15621"
                                                                },
                                                                "id": 157,
                                                                "name": "Literal",
                                                                "src": "1658:5:0"
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "commonType": {
                                                                    "typeIdentifier": "t_rational_1000000000_by_1",
                                                                    "typeString": "int_const 1000000000"
                                                                  },
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "operator": "**",
                                                                  "type": "int_const 1000000000"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "hexvalue": "3130",
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "token": "number",
                                                                      "type": "int_const 10",
                                                                      "value": "10"
                                                                    },
                                                                    "id": 158,
                                                                    "name": "Literal",
                                                                    "src": "1666:2:0"
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "hexvalue": "39",
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "token": "number",
                                                                      "type": "int_const 9",
                                                                      "value": "9"
                                                                    },
                                                                    "id": 159,
                                                                    "name": "Literal",
                                                                    "src": "1670:1:0"
                                                                  }
                                                                ],
                                                                "id": 160,
                                                                "name": "BinaryOperation",
                                                                "src": "1666:5:0"
                                                              }
                                                            ],
                                                            "id": 161,
                                                            "name": "BinaryOperation",
                                                            "src": "1658:13:0"
                                                          }
                                                        ],
                                                        "id": 162,
                                                        "name": "FunctionCall",
                                                        "src": "1640:32:0"
                                                      }
                                                    ],
                                                    "id": 163,
                                                    "name": "ExpressionStatement",
                                                    "src": "1640:32:0"
                                                  },
                                                  {
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "++",
                                                          "prefix": false,
                                                          "type": "uint8"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 10,
                                                              "type": "uint8",
                                                              "value": "mintedTimes"
                                                            },
                                                            "id": 164,
                                                            "name": "Identifier",
                                                            "src": "1680:11:0"
                                                          }
                                                        ],
                                                        "id": 165,
                                                        "name": "UnaryOperation",
                                                        "src": "1680:14:0"
                                                      }
                                                    ],
                                                    "id": 166,
                                                    "name": "ExpressionStatement",
                                                    "src": "1680:14:0"
                                                  }
                                                ],
                                                "id": 167,
                                                "name": "Block",
                                                "src": "1632:69:0"
                                              }
                                            ],
                                            "id": 168,
                                            "name": "IfStatement",
                                            "src": "1611:90:0"
                                          }
                                        ],
                                        "id": 169,
                                        "name": "IfStatement",
                                        "src": "1517:184:0"
                                      }
                                    ],
                                    "id": 170,
                                    "name": "IfStatement",
                                    "src": "1422:279:0"
                                  }
                                ],
                                "id": 171,
                                "name": "IfStatement",
                                "src": "1328:373:0"
                              }
                            ],
                            "id": 172,
                            "name": "IfStatement",
                            "src": "1233:468:0"
                          }
                        ],
                        "id": 173,
                        "name": "IfStatement",
                        "src": "1138:563:0"
                      }
                    ],
                    "id": 174,
                    "name": "IfStatement",
                    "src": "1045:656:0"
                  }
                ],
                "id": 175,
                "name": "Block",
                "src": "967:737:0"
              }
            ],
            "id": 176,
            "name": "FunctionDefinition",
            "src": "921:783:0"
          }
        ],
        "id": 177,
        "name": "ContractDefinition",
        "src": "180:1525:0"
      }
    ],
    "id": 178,
    "name": "SourceUnit",
    "src": "33:1674:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {
    "97": {
      "events": {},
      "links": {},
      "address": "0xd47Ed8eD2e937d442F718200cE4A36120bc3AB29",
      "transactionHash": "0xbb836c11695c4d2d4d36e2077ab5b145f36a58ab01c9796a5b23dbb3887aad92"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xa19a563e56574C438D12015265b6C60d9A199A84",
      "transactionHash": "0x165540a032fedf1931ec612ce9c59bb22905ad098623cefcbf2002e26ccc7a7e"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-11T14:52:26.983Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}